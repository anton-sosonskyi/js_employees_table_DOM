{"version":3,"sources":["scripts/main.js"],"names":["tableHeader","document","querySelector","table","displayStatus","posTop","posRight","title","description","type","body","block","createElement","blockTitle","message","classList","add","dataset","qa","className","textContent","innerText","style","width","top","right","append","setTimeout","remove","addSortingListener","addTable","array","element","sortedASC","forEach","tr","reverse","getSortedArray","index","result","sort","row1","row2","cells","slice","replace","localeCompare","addEventListener","e","target","closest","Array","from","rows","addRowSelection","targetRow","querySelectorAll","row","createForm","form","method","insertAdjacentHTML","insertAdjacentElement","addFormDataToTable","preventDefault","formData","data","salary","employeeHTML","FormData","isValid","get","length","Number","parseInt","toLocaleString","field","value","addCellUpdateListener","targetCell","cellParent","parentElement","cellIndex","display","inputCell","insertCell","placeholder","editIndex","select","innerHTML","input","createInput","focus","inputEvent","validateEdit","isLegit","isNaN"],"mappings":"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","file":"main.564a9a8c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst tableHeader = document.querySelector('thead');\nconst table = document.querySelector('tbody');\n\nconst displayStatus = function(posTop, posRight, title, description, type) {\n  const body = document.body;\n  const block = document.createElement('div');\n  const blockTitle = document.createElement('h2');\n  const message = document.createElement('p');\n\n  block.classList.add('notification', type);\n  block.dataset.qa = 'notification';\n  blockTitle.className = 'title';\n  blockTitle.textContent = title;\n  message.innerText = description;\n\n  block.style.width = 'max-content';\n  block.style.top = `${posTop}px`;\n  block.style.right = `${posRight}px`;\n\n  block.append(blockTitle, message);\n  body.append(block);\n\n  setTimeout(() => block.remove(), 4000);\n};\n\nfunction addSortingListener() {\n  const addTable = (array, element) => {\n    if (!element.sortedASC) {\n      array.forEach(tr => {\n        table.append(tr);\n      });\n\n      element.sortedASC = true;\n\n      return;\n    }\n\n    if (element.sortedASC) {\n      [...array].reverse().forEach(tr => {\n        table.append(tr);\n      });\n\n      element.sortedASC = false;\n    }\n  };\n\n  function getSortedArray(array, index) {\n    const result = array.sort((row1, row2) => {\n      if (row1.cells[index].innerText[0] === '$') {\n        const cellOne = +row1.cells[index].innerText.slice(1).replace(/,/g, '');\n        const cellTwo = +row2.cells[index].innerText.slice(1).replace(/,/g, '');\n\n        return cellOne - cellTwo;\n      }\n\n      return (\n        row1.cells[index].textContent\n          .localeCompare(row2.cells[index].textContent)\n      );\n    });\n\n    return result;\n  }\n\n  tableHeader.addEventListener('click', (e) => {\n    const title = e.target.closest('th');\n\n    if (!title) {\n      return;\n    }\n\n    switch (title.textContent) {\n      case 'Name':\n        addTable(getSortedArray(Array.from(table.rows), 0), title);\n        break;\n      case 'Position':\n        addTable(getSortedArray(Array.from(table.rows), 1), title);\n        break;\n      case 'Office':\n        addTable(getSortedArray(Array.from(table.rows), 2), title);\n        break;\n      case 'Age':\n        addTable(getSortedArray(Array.from(table.rows), 3), title);\n        break;\n      case 'Salary':\n        addTable(getSortedArray(Array.from(table.rows), 4), title);\n        break;\n    }\n  });\n}\n\nfunction addRowSelection() {\n  table.addEventListener('click', e => {\n    const targetRow = e.target.closest('tr');\n    const rows = Array.from(table.querySelectorAll('tr'));\n\n    for (const row of rows) {\n      if (row !== targetRow && row.className === 'active') {\n        row.className = '';\n      }\n    }\n\n    targetRow.className = 'active';\n  });\n}\n\nfunction createForm() {\n  const form = document.createElement('form');\n\n  form.className = 'new-employee-form';\n  form.method = 'post';\n\n  const formHTML = `\n    <label>Name: <input data-qa=\"name\" name=\"name\" type=\"text\" required></label>\n    <label>Position: \n      <input \n        data-qa=\"position\" \n        name=\"position\" \n        type=\"text\" \n        required>\n    </label>\n    <label>Office: <select data-qa=\"office\" name=\"office\" required>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age: \n      <input \n        data-qa=\"age\" \n        name=\"age\" \n        type=\"number\" \n        required>\n    </label>\n    <label>Salary: \n      <input \n        data-qa=\"salary\" \n        name=\"salary\" \n        type=\"number\" \n        required>\n    </label>\n    <button type=\"submit\">Save to table</button>\n  `;\n\n  form.insertAdjacentHTML('afterbegin', formHTML);\n  document.querySelector('table').insertAdjacentElement('afterend', form);\n}\n\nfunction addFormDataToTable() {\n  const form = document.querySelector('.new-employee-form');\n\n  const clearForm = function() {\n    const fields = Array.from(document.querySelectorAll('input'));\n\n    fields.forEach(function(field) {\n      field.value = '';\n    });\n  };\n\n  const appendNewEmployee = (data) => {\n    const tr = document.createElement('tr');\n    const salary = Number.parseInt(data.get('salary')).toLocaleString('en-US');\n    const employeeHTML = `\n      <td>${data.get('name')}</td>\n      <td>${data.get('position')}</td>\n      <td>${data.get('office')}</td>\n      <td>${data.get('age')}</td>\n      <td>$${salary}</td>\n    `;\n\n    tr.insertAdjacentHTML('afterbegin', employeeHTML);\n    table.append(tr);\n  };\n\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const formData = new FormData(form);\n    let isValid = true;\n    let message;\n\n    if (formData.get('name').length < 4) {\n      isValid = false;\n      message = 'Name should be more than 4 characters long';\n      displayStatus(100, 10, 'Invalid data', message, 'error');\n    }\n\n    if (+formData.get('age') < 18 || +formData.get('age') > 90) {\n      isValid = false;\n      message = 'Enter correct age';\n      displayStatus(250, 10, 'Invalid data', message, 'error');\n    }\n\n    if (isValid) {\n      message = 'Employee successfully added';\n      displayStatus(390, 10, 'Success', message, 'success');\n      appendNewEmployee(formData);\n      clearForm();\n    }\n  });\n}\n\nfunction addCellUpdateListener() {\n  const createInput = function(placeholder, editIndex) {\n    if (editIndex === 2) {\n      const select = document.createElement('select');\n\n      select.className = 'cell-input';\n\n      select.innerHTML = `\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n      `;\n\n      return select;\n    }\n\n    const input = document.createElement('input');\n\n    input.className = 'cell-input';\n    input.placeholder = `${placeholder}`;\n\n    return input;\n  };\n\n  table.addEventListener('dblclick', e => {\n    const targetCell = e.target.closest('td');\n\n    if (!targetCell) {\n      return;\n    }\n\n    const cellParent = targetCell.parentElement;\n    const cellIndex = targetCell.cellIndex;\n\n    targetCell.style.display = 'none';\n\n    const inputCell = cellParent.insertCell(cellIndex);\n\n    inputCell.insertAdjacentElement(\n      'afterbegin', createInput(targetCell.textContent, cellIndex)\n    );\n\n    const input = document.querySelector('.cell-input');\n\n    input.focus();\n\n    ['blur', 'change'].forEach(function(inputEvent) {\n      input.addEventListener(inputEvent, () => {\n        if (input.value !== '' && validateEdit(input.value, cellIndex)) {\n          targetCell.textContent = cellIndex === 4\n            ? `$${Number.parseInt(input.value).toLocaleString('en-US')}`\n            : input.value;\n        }\n\n        inputCell.remove();\n        targetCell.style.display = '';\n      });\n    });\n\n    const validateEdit = function(value, index) {\n      let isLegit = true;\n      let message;\n\n      switch (index) {\n        case 0:\n        case 1:\n          if (value.length < 4) {\n            message = 'Field should be more than 4 character long.';\n            displayStatus(100, 10, 'Invalid data', message, 'error');\n            isLegit = false;\n          }\n          break;\n\n        case 3:\n          if (isNaN(value)) {\n            message = 'Field should have a number type';\n            displayStatus(100, 10, 'Invalid data', message, 'error');\n            isLegit = false;\n          }\n\n          if (+value < 18 || +value > 90) {\n            message = 'Incorrect age';\n            displayStatus(200, 10, 'Invalid data', message, 'error');\n            isLegit = false;\n          }\n          break;\n\n        case 4:\n          if (isNaN(value)) {\n            message = 'Should be a number';\n            displayStatus(100, 10, 'Invalid data', message, 'error');\n            isLegit = false;\n          }\n          break;\n      }\n\n      return isLegit;\n    };\n  });\n}\n\naddSortingListener();\naddRowSelection();\ncreateForm();\naddFormDataToTable();\naddCellUpdateListener();\n"]}